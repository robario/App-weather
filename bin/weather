#! /usr/bin/perl
#
# $Id$
#
# http://www.drk7.jp/weather/
#
eval 'exec /usr/bin/perl -S $0 ${1+"$@"}'
  if 0;
use strict;
use warnings;
use utf8;
use autodie;
our $VERSION = '0.01';

use JSON qw(from_json);
use LWP::Simple qw(get);
use Term::ANSIColor qw(colored);
use Time::Piece ();

binmode STDOUT => ':utf8';
binmode STDERR => ':utf8';

my $json = get('http://www.drk7.jp/weather/json/13.js');
$json =~ s/\Adrk7jpweather[.]callback[(](.+)[)];\Z/$1/msx;
my $data = from_json($json);

my $now = Time::Piece->new;
foreach my $info (@{$data->{pref}->{area}->{東京地方}->{info}}) {
    $info->{date} = Time::Piece->strptime($info->{date}, '%Y/%m/%d');
    if ($now->ymd eq $info->{date}->ymd) {
        foreach my $rainfallchance (@{$info->{rainfallchance}->{period}}) {
            my ($begin, $end) = split /-/msx, $rainfallchance->{hour};
            if ($begin <= $now->hour && $now->hour < $end) {
                print '現在の降水確率：' . $rainfallchance->{content} . $info->{rainfallchance}->{unit} . "\n";
                last;
          }
        }
    }
    $info->{img} =~ s{\A.*(\d{3})[.]gif\Z}{
      my $x = $1;
     {1  => ( colored ['red on_bright_cyan'],    "\x{2600} " ) . "($x)",
      2  => ( colored ['bright_white on_bright_black'], "\x{2601} " ) . "($x)",
      3  => ( colored ['blue on_white'],         "\x{2602} " ) . "($x)",
      4  => ( colored ['white on_bright_white'], "\x{2603} " ) . "($x)",
      7  => ( colored ['bright_yellow on_bright_black'],    "\x{263d} " ) . "($x)",
      }->{int($x/100)}}emsx;
       # black  red  green  yellow  blue  magenta  cyan  white
       # bright_*
       # on_*
       # on_bright_*
    print "$info->{date} $info->{img} $info->{weather} $info->{rainfallchance} $info->{temperature}->{unit} $info->{temperature}->{range}->[1]->{content}～$info->{temperature}->{range}->[0]->{content}";
    if ($info->{wave}) {
        print $info->{wave};
    }
    if ($info->{weather_detail}) {
        print $info->{weather_detail};
    }
    print "\n";
}

__END__

=head1 NAME

weather - [One line description of module's purpose here]

=head1 USAGE

    $ perl weather

=head1 DESCRIPTION

=for author to fill in:
    Write a full description of the module and its features here.
    Use subsections (=head2, =head3) as appropriate.

=head1 REQUIRED ARGUMENTS

=head1 OPTIONS

=head1 DIAGNOSTICS

=for author to fill in:
    List every single error and warning message that the module can
    generate (even the ones that will "never happen"), with a full
    explanation of each problem, one or more likely causes, and any
    suggested remedies.

=over

=item C<< Error message here, perhaps with %s placeholders >>

[Description of error here]

=item C<< Another error message here >>

[Description of error here]

[Et cetera, et cetera]

=back

=head1 EXIT STATUS

=head1 CONFIGURATION

=for author to fill in:
    A full explanation of any configuration system(s) used by the
    module, including the names and locations of any configuration
    files, and the meaning of any environment variables or properties
    that can be set. These descriptions must also include details of any
    configuration language used.

weather requires no configuration files.

=head1 DEPENDENCIES

=for author to fill in:
    A list of all the other modules that this module relies upon,
    including any restrictions on versions, and an indication whether
    the module is part of the standard Perl distribution, part of the
    module's distribution, or must be installed separately. ]

None.

=head1 INCOMPATIBILITIES

=for author to fill in:
    A list of any modules that this module cannot be used in conjunction
    with. This may be due to name conflicts in the interface, or
    competition for system or program resources, or due to internal
    limitations of Perl (for example, many modules that use source code
    filters are mutually incompatible).

None reported.

=head1 BUGS AND LIMITATIONS

=for author to fill in:
    A list of known problems with the module, together with some
    indication Whether they are likely to be fixed in an upcoming
    release. Also a list of restrictions on the features the module
    does provide: data types that cannot be handled, performance issues
    and the circumstances in which they may arise, practical
    limitations on the size of data sets, special cases that are not
    (yet) handled, etc.

No bugs have been reported.

=head1 AUTHOR

Hironori Yoshida <yoshida@cpan.org>

=head1 LICENSE AND COPYRIGHT

This module is free software; you can redistribute it and/or modify it
under the same terms as Perl itself. See L<perlartistic|perlartistic>.

=cut
